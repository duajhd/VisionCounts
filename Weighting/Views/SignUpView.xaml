<Page
    x:Class="Weighting.Views.SignUpView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:dc="clr-namespace:Weighting.ViewModels"
    xmlns:local="clr-namespace:Weighting"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:va="clr-namespace:Weighting.Shared"
    Title="SignUpView"
    d:DesignHeight="450"
    d:DesignWidth="800"
    mc:Ignorable="d">

    <Page.Resources>
        <!--  注册自定义 ValidationRule  -->
        <va:NotEmptyValidationRule x:Key="NotEmptyRule" />
    </Page.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="50" />
            <RowDefinition Height="*" />
            <RowDefinition Height="60" />
        </Grid.RowDefinitions>
        <StackPanel Orientation="Horizontal">
            <Button
                IsEnabled="{Binding DataContext.ControlsEnabled, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}"
                Style="{StaticResource MaterialDesignFloatingActionButton}"
                ToolTip="MaterialDesignFloatingActionButton">
                <materialDesign:PackIcon Kind="Alarm" />
            </Button>
            <Button
                IsEnabled="{Binding DataContext.ControlsEnabled, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}"
                Style="{StaticResource MaterialDesignFloatingActionButton}"
                ToolTip="MaterialDesignFloatingActionButton">
                <materialDesign:PackIcon Kind="Alarm" />
            </Button>

        </StackPanel>
        <materialDesign:Card Grid.Row="1">
            <TabControl materialDesign:ColorZoneAssist.Mode="PrimaryMid" Style="{StaticResource MaterialDesignFilledTabControl}">
                <TabItem Header="新增配方">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="700" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="70" />
                        </Grid.RowDefinitions>
                        <UniformGrid Columns="2">
                            <StackPanel HorizontalAlignment="Center" Orientation="Vertical">
                                <TextBlock>配料编码</TextBlock>
                                <TextBox />
                            </StackPanel>
                            <StackPanel>
                                <TextBlock>配料名称</TextBlock>
                                <TextBox />
                            </StackPanel>
                        </UniformGrid>
                        <DataGrid
                            AutoGenerateColumns="False"
                            CanUserAddRows="False"
                            HeadersVisibility="All"
                            ItemsSource="{Binding Items1}"
                            SelectionChanged="DataGrid_SelectionChanged">
                            <DataGrid.Columns>
                                <!--  by default a DataGridCheckBoxColumn will have the MaterialDesignDataGridCheckBoxColumnStyle and MaterialDesignDataGridCheckBoxColumnEditingStyle applied. See DataGridAssist.ApplyMaterialDesignColumnStyles attached property  -->
                                <DataGridCheckBoxColumn Binding="{Binding IsSelected, UpdateSourceTrigger=PropertyChanged}">
                                    <DataGridCheckBoxColumn.Header>
                                        <Border Background="Transparent">
                                            <CheckBox IsChecked="{Binding RelativeSource={RelativeSource AncestorType=Page}, Path=DataContext.IsAllItems1Selected}" />
                                        </Border>
                                    </DataGridCheckBoxColumn.Header>
                                    <DataGridCheckBoxColumn.HeaderStyle>
                                        <Style BasedOn="{StaticResource MaterialDesignDataGridColumnHeader}" TargetType="{x:Type DataGridColumnHeader}">
                                            <Setter Property="HorizontalContentAlignment" Value="Center" />
                                        </Style>
                                    </DataGridCheckBoxColumn.HeaderStyle>
                                </DataGridCheckBoxColumn>
                                <!--  by default a DataGridTextColumn will have the MaterialDesignDataGridTextColumnStyle and MaterialDesignDataGridTextColumnEditingStyle applied. See DataGridAssist.ApplyMaterialDesignColumnStyles attached property  -->

                                <!--  if you want to use the pop up style (MaterialDesignDataGridTextColumnPopupEditingStyle), you must use MaterialDataGridTextColumn  -->
                                <materialDesign:DataGridTextColumn
                                    EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnPopupEditingStyle}"
                                    ElementStyle="{StaticResource MaterialDesignDataGridTextColumnStyle}"
                                    Header="配料名">
                                    <materialDesign:DataGridTextColumn.Binding>
                                        <Binding Path="Item.MaterialName">
                                            <Binding.ValidationRules>
                                                <StaticResource ResourceKey="NotEmptyRule" />
                                            </Binding.ValidationRules>
                                        </Binding>
                                    </materialDesign:DataGridTextColumn.Binding>
                                </materialDesign:DataGridTextColumn>
                                <!--  set a max length to get an indicator in the editor  -->
                                <DataGridTextColumn Header="上公差">
                                    <DataGridTextColumn.Binding>
                                        <Binding Path="Item.weights" StringFormat="{}{0:F2}">
                                            <Binding.ValidationRules>
                                                <StaticResource ResourceKey="NotEmptyRule" />
                                            </Binding.ValidationRules>
                                        </Binding>
                                    </DataGridTextColumn.Binding>
                                </DataGridTextColumn>
                                <materialDesign:DataGridTextColumn
                                    Width="120"
                                    EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnPopupEditingStyle}"
                                    Header="下公差">
                                    <DataGridTextColumn.Binding>
                                        <Binding Path="Item.weights" StringFormat="{}{0:F2}">
                                            <Binding.ValidationRules>
                                                <StaticResource ResourceKey="NotEmptyRule" />
                                            </Binding.ValidationRules>
                                        </Binding>
                                    </DataGridTextColumn.Binding>
                                    <DataGridTextColumn.HeaderStyle>
                                        <Style BasedOn="{StaticResource MaterialDesignDataGridColumnHeader}" TargetType="{x:Type DataGridColumnHeader}">
                                            <Setter Property="ContentTemplate">
                                                <Setter.Value>
                                                    <DataTemplate>
                                                        <TextBlock
                                                            Text="{Binding}"
                                                            TextAlignment="Right"
                                                            TextWrapping="Wrap" />
                                                    </DataTemplate>
                                                </Setter.Value>
                                            </Setter>
                                            <Setter Property="HorizontalContentAlignment" Value="Right" />
                                        </Style>
                                    </DataGridTextColumn.HeaderStyle>
                                    <DataGridTextColumn.ElementStyle>
                                        <Style BasedOn="{StaticResource MaterialDesignDataGridTextColumnStyle}" TargetType="{x:Type TextBlock}">
                                            <Setter Property="HorizontalAlignment" Value="Right" />
                                        </Style>
                                    </DataGridTextColumn.ElementStyle>
                                </materialDesign:DataGridTextColumn>
                                <!--  use custom combo box column to get better combos. Use ItemsSourceBinding as your binding template to be applied to each combo  -->
                                <materialDesign:DataGridComboBoxColumn
                                    Width="100"
                                    Header="Food with long header"
                                    IsEditable="True"
                                    ItemsSourceBinding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGrid}}, Path=DataContext.Foods}"
                                    SelectedValueBinding="{Binding Food}">
                                    <!--Setting the editing element style allows access to all of the combo box's properties
                   <materialDesign:MaterialDataGridComboBoxColumn.EditingElementStyle>
                       <Style TargetType="ComboBox" BasedOn="{StaticResource {ComponentResourceKey TypeInTargetAssembly={x:Type ComboBox}, ResourceId=MaterialDataGridComboBoxColumnEditingStyle}}" >
                           <Setter Property="IsEditable" Value="True" />
                       </Style>
                   </materialDesign:MaterialDataGridComboBoxColumn.EditingElementStyle>
                                    -->
                                </materialDesign:DataGridComboBoxColumn>


                            </DataGrid.Columns>
                        </DataGrid>
                    </Grid>
                </TabItem>
                <TabItem Header="编辑配方">
                    <TextBlock Margin="8" Text="PrimaryMid Tab 2" />
                </TabItem>
                <TabItem Header="TAB 3">
                    <TextBlock Margin="8" Text="PrimaryMid Tab 2" />
                </TabItem>
            </TabControl>
        </materialDesign:Card>
    </Grid>
</Page>
